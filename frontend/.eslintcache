[{"/Users/camposf/IdeaProjects/so/frontend/src/index.js":"1","/Users/camposf/IdeaProjects/so/frontend/src/App.js":"2","/Users/camposf/IdeaProjects/so/frontend/src/reportWebVitals.js":"3","/Users/camposf/IdeaProjects/so/frontend/src/pages/Home/Home.js":"4","/Users/camposf/IdeaProjects/so/frontend/src/pages/Ask/Ask.js":"5","/Users/camposf/IdeaProjects/so/frontend/src/pages/Post/Post.js":"6","/Users/camposf/IdeaProjects/so/frontend/src/api/api.js":"7","/Users/camposf/IdeaProjects/so/frontend/src/helpers/Constants.js":"8","/Users/camposf/IdeaProjects/so/frontend/src/components/FilterTagList/FilterTagList.js":"9","/Users/camposf/IdeaProjects/so/frontend/src/components/PostList/PostList.js":"10","/Users/camposf/IdeaProjects/so/frontend/src/components/Ask/Ask.js":"11","/Users/camposf/IdeaProjects/so/frontend/src/components/FilterTag/FilterTag.js":"12","/Users/camposf/IdeaProjects/so/frontend/src/components/PostItem/PostItem.js":"13","/Users/camposf/IdeaProjects/so/frontend/src/components/ActionButton/ActionButton.js":"14"},{"size":500,"mtime":1610123188013,"results":"15","hashOfConfig":"16"},{"size":601,"mtime":1612667045949,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610123188013,"results":"18","hashOfConfig":"16"},{"size":1083,"mtime":1611981512002,"results":"19","hashOfConfig":"16"},{"size":4299,"mtime":1612673560990,"results":"20","hashOfConfig":"16"},{"size":5276,"mtime":1612703970288,"results":"21","hashOfConfig":"16"},{"size":2781,"mtime":1612703970296,"results":"22","hashOfConfig":"16"},{"size":150,"mtime":1611375956576,"results":"23","hashOfConfig":"16"},{"size":1538,"mtime":1612117083132,"results":"24","hashOfConfig":"16"},{"size":1088,"mtime":1611375866667,"results":"25","hashOfConfig":"16"},{"size":327,"mtime":1611981417817,"results":"26","hashOfConfig":"16"},{"size":704,"mtime":1611983306770,"results":"27","hashOfConfig":"16"},{"size":355,"mtime":1610261033988,"results":"28","hashOfConfig":"16"},{"size":363,"mtime":1612665267814,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"f2399k",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/camposf/IdeaProjects/so/frontend/src/index.js",[],["60","61"],"/Users/camposf/IdeaProjects/so/frontend/src/App.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/reportWebVitals.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/pages/Home/Home.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/pages/Ask/Ask.js",["62","63"],"import React, {useEffect, useState} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {port, url, userId} from \"../../helpers/Constants\";\nimport {createQuestion, editQuestion} from \"../../api/api\";\n\nconst moment = require(\"moment\");\nconst {useHistory} = require('react-router-dom')\n\nfunction Ask({match}) {\n\n    let history = useHistory();\n    let location = useLocation();\n\n    let data;\n    if (location.state !== undefined) {\n        data = location.state.data\n    }\n\n    let initialValues;\n    initialValues = {\n        title: \"\",\n        description: \"\",\n    }\n\n    const [values, setValues] = useState(initialValues);\n    const [payload, setPayload] = useState({});\n\n    useEffect(() => {\n        if (data !== undefined) {\n            initialValues = {\n                title: data.title,\n                description: data.description,\n            };\n            setValues(initialValues)\n        }\n    }, [data !== undefined])\n\n    const handleChange = (e) => {\n\n        const {name, value} = e.target;\n\n        setValues({\n            ...values,\n            [name]: value,\n        });\n    }\n\n    useEffect(() => {\n        setPayload({\n            title: `${values.title}`,\n            creationDate: moment().unix(),\n            description: `${values.description}`,\n        })\n    }, [values])\n\n    const handleClick = () => {\n\n        if (data === undefined) { // When there's no data object it means we are creating a new question\n\n            // set payload data based of state from input and textarea\n            const axiosParams = {\n                url: url,\n                port: port,\n                payload: payload,\n                userId: userId,\n            }\n\n            createQuestion(axiosParams, payload)\n\n                .then((response) => {\n                        // show success message ;\n                        history.push(`/`);\n                    }\n                ).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                }\n            });\n        }\n        else {\n\n            // set payload data based of state from input and textarea\n            const axiosParams = {\n                url: url,\n                port: port,\n                id:match.params.id,\n                payload: payload,\n                userId: userId,\n            }\n\n            editQuestion(axiosParams, payload)\n\n                .then((response) => {\n                        // show success message ;\n                        history.push(`/`);\n                    }\n                ).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                }\n            });\n        }\n    }\n\n    const handleEdit = () => {\n        const axiosParams = {\n            url: url,\n            port: port,\n            id: match.params.id,\n            userId: userId,\n        }\n\n        editQuestion(axiosParams)\n\n            .then(() => {\n\n                    console.log(\"question edited\");\n                    history.push(`/`);\n                }\n            )\n\n    }\n\n    return (\n        <div className=\"Ask\" style={{marginLeft: '20px'}}>\n            <div style={{flexDirection: 'column'}}>\n                <h1>\n                    Ask a public question\n                </h1>\n                <p>Title</p>\n                <input type=\"text\"\n                       onChange={handleChange}\n                       name=\"title\"\n                       value={values.title}/>\n                <br/>\n                <p>Body</p>\n                <textarea\n                    value={values.description}\n                    onChange={handleChange}\n                    name=\"description\"\n                    rows={5}\n                    cols={5}\n                />\n                <br/>\n                <Button variant=\"outline-primary\" onClick={handleClick}>\n                    Save\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default Ask;\n","/Users/camposf/IdeaProjects/so/frontend/src/pages/Post/Post.js",["64","65"],"/Users/camposf/IdeaProjects/so/frontend/src/api/api.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/helpers/Constants.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/components/FilterTagList/FilterTagList.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/components/PostList/PostList.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/components/Ask/Ask.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/components/FilterTag/FilterTag.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/components/PostItem/PostItem.js",[],"/Users/camposf/IdeaProjects/so/frontend/src/components/ActionButton/ActionButton.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":33,"column":29,"nodeType":"72","endLine":36,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":112,"column":11,"nodeType":"75","messageId":"76","endLine":112,"endColumn":21},{"ruleId":"70","severity":1,"message":"77","line":142,"column":8,"nodeType":"78","endLine":142,"endColumn":42,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"80","line":142,"column":26,"nodeType":"81","endLine":142,"endColumn":41},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","Assignments to the 'initialValues' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","no-unused-vars","'handleEdit' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [initialValues, match.params.id]",{"range":"87","text":"88"},[3431,3465],"[initialValues, match.params.id]"]